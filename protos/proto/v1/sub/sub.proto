syntax = "proto3";
package sub.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option go_package = "github.com/GenesisEducationKyiv/software-engineering-school-4-0-hrvadl/protos/v1/sub";


service SubService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Subscription serivce";
    description: "Service responsible for subscribing users and sending rate exchange notifications";
  };
  rpc Subscribe(SubscribeRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {post: "/api/v1/subscribe"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Subscribe user";
      summary: "Subscribe user";
      tags: "user subscribe subscription"
      responses: {
        key: "500"
        value: {
          description: "Returned when there was error on server side"
          examples: {
            key: "application/json"
            value: "{\"message\": \"internal server error\"}"
          };
        };
      };
      responses: {
        key: "400"
        value: {
          description: "Returned when email is not valid"
          examples: {
            key: "application/json"
            value: "{\"message\": \"email is not valid\"}"
          };
        };
      };
      responses: {
        key: "409"
        value: {
          description: "Returned when email was already used"
          examples: {
            key: "application/json"
            value: "{\"message\": \"email is already used\"}"
          };
        };
      };
      responses: {
        key: "200"
        value: {
          description: "Returned when user was successfully subscribed"
          examples: {
            key: "application/json"
            value: "{\"message\": \"added email\"}"
          };
        };
      };
    };
  };
}

message SubscribeRequest {
  string email = 1 [(google.api.field_behavior) = REQUIRED];
}

enum ErrorCode {
  ERROR_CODE_UNSPECIFIED = 0;
  ERROR_CODE_INVALID_EMAIL_FORMAT = 1;
  ERROR_CODE_ALREADY_EXISTS = 2;
}

message BadRequest {
  ErrorCode code = 1;
  string field = 2;
  string description = 3;
}
