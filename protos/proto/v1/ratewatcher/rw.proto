syntax = "proto3";
package ratewatcher.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/GenesisEducationKyiv/software-engineering-school-4-0-hrvadl/protos/v1/ratewatcher";

service RateWatcherService {
  rpc GetRate(google.protobuf.Empty) returns (RateResponse) {
    option (google.api.http) = {get: "/api/v1/rate"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Get latest USD -> UAH exchange rate";
      summary: "Get rate";
      tags: "exchange rate"
      responses: {
        key: "400"
        value: {
          description: "Returned when there was error on server side"
          examples: {
            key: "application/json"
            value: "{\"message\": \"successfully got rate\", \"success\": false}"
          };
        };
      }
      responses: {
        key: "200"
        value: {
          description: "Returned successfully fetched exchange rate"
          examples: {
            key: "application/json"
            value: "{\"message\": \"successfully got rate\", \"success\": true, \"data\": 42}"
          };
        };
      }
    };
  }
}

message RateResponse {
  float rate = 1;
}
