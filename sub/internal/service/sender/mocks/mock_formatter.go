// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hrvadl/converter/sub/internal/service/sender (interfaces: RateMessageFormatter)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_formatter.go -package=mocks . RateMessageFormatter
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRateMessageFormatter is a mock of RateMessageFormatter interface.
type MockRateMessageFormatter struct {
	ctrl     *gomock.Controller
	recorder *MockRateMessageFormatterMockRecorder
}

// MockRateMessageFormatterMockRecorder is the mock recorder for MockRateMessageFormatter.
type MockRateMessageFormatterMockRecorder struct {
	mock *MockRateMessageFormatter
}

// NewMockRateMessageFormatter creates a new mock instance.
func NewMockRateMessageFormatter(ctrl *gomock.Controller) *MockRateMessageFormatter {
	mock := &MockRateMessageFormatter{ctrl: ctrl}
	mock.recorder = &MockRateMessageFormatterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRateMessageFormatter) EXPECT() *MockRateMessageFormatterMockRecorder {
	return m.recorder
}

// Format mocks base method.
func (m *MockRateMessageFormatter) Format(arg0 float32) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Format", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Format indicates an expected call of Format.
func (mr *MockRateMessageFormatterMockRecorder) Format(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Format", reflect.TypeOf((*MockRateMessageFormatter)(nil).Format), arg0)
}
